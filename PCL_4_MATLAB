cmake_minimum_required(VERSION 3.10)

# Project name
project(PointProcessing_PCL)

# Enable verbose output
set(CMAKE_VERBOSE_MAKEFILE ON)

# Set C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Set build type (Debug for development)
set(CMAKE_BUILD_TYPE Debug)

# Specify the target architecture
set(CMAKE_OSX_ARCHITECTURES x86_64)

# Add custom CMake module path
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "/usr/local/share/cmake/Modules")

# Set the CMake policy to avoid policy warnings
cmake_policy(SET CMP0074 NEW)
cmake_policy(SET CMP0144 NEW)

# Set MATLAB and MEX path
set(CMAKE_INSTALL_RPATH "/Applications/MATLAB_R2023b.app/extern/bin/maci64")
set(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath,/Applications/MATLAB_R2023b.app/extern/bin/maci64")

# Include directories for OpenMP, TIFF, and PCL
include_directories(/usr/local/include)  # General include directory
include_directories(/usr/local/opt/libomp/include)  # OpenMP
include_directories(/usr/local/include/pcl-1.14)  # PCL
include_directories(/Applications/MATLAB_R2023b.app/extern/include)  # MATLAB

# Manually specify TIFF paths
set(TIFF_INCLUDE_DIR /usr/local/opt/libtiff/include)
set(TIFF_LIBRARY /usr/local/lib/libtiff.dylib)
set(TIFFXX_LIBRARY /usr/local/lib/libtiffxx.dylib)
set(tiff_DIR /usr/local/opt/libtiff)

find_package(TIFF REQUIRED)
if (TIFF_FOUND)
    message(STATUS "TIFF found: ${TIFF_INCLUDE_DIR}")
    include_directories(${TIFF_INCLUDE_DIR})
else()
    message(FATAL_ERROR "TIFF not found")
endif()

# Manually specify OpenMP paths
set(OpenMP_C_FLAGS "-Xpreprocessor -fopenmp")
set(OpenMP_C_LIB_NAMES "omp")
set(OpenMP_omp_LIBRARY "/usr/local/opt/libomp/lib/libomp.dylib")
set(OpenMP_CXX_FLAGS "-Xpreprocessor -fopenmp")
set(OpenMP_CXX_LIB_NAMES "omp")
set(OpenMP_omp_LIBRARY "/usr/local/opt/libomp/lib/libomp.dylib")

# Link manually specified libraries
include_directories(${TIFF_INCLUDE_DIR})
include_directories(${OpenMP_INCLUDE_DIR})
link_libraries(${TIFF_LIBRARY} ${TIFFXX_LIBRARY} ${OpenMP_omp_LIBRARY})

# Find TIFF
find_package(TIFF REQUIRED)
if (TIFF_FOUND)
    message(STATUS "TIFF found: ${TIFF_INCLUDE_DIR}")
else()
    message(FATAL_ERROR "TIFF not found")
endif()

# Specify PCL components
set(PCL_COMPONENTS common io features surface kdtree search filters sample_consensus)

# Find PCL and MATLAB
find_package(PCL 1.14 REQUIRED COMPONENTS ${PCL_COMPONENTS})
include_directories(${PCL_INCLUDE_DIRS})
add_definitions(${PCL_DEFINITIONS})

find_package(Matlab REQUIRED)

# Find OpenMP
find_package(OpenMP REQUIRED)
if(OpenMP_CXX_FOUND)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
    message(STATUS "OpenMP found with compiler flags: ${OpenMP_CXX_FLAGS}")
else()
    message(FATAL_ERROR "OpenMP not found")
endif()

# Avoid redundant linking
list(REMOVE_DUPLICATES PCL_LIBRARIES)

# MATLAB MEX function
matlab_add_mex(
    NAME PointProcessing
    SRC src/Main.cpp
    OUTPUT_NAME PointProcessing
    LINK_TO ${PCL_LIBRARIES} ${Matlab_LIBRARIES} ${TIFF_LIBRARY} ${TIFFXX_LIBRARY} ${OpenMP_omp_LIBRARY}
)

# Display some status messages
message(STATUS "CMake Binary Directory: ${CMAKE_BINARY_DIR}")
message(STATUS "MATLAB Include Dirs: ${Matlab_INCLUDE_DIRS}")
message(STATUS "MATLAB Libraries: ${Matlab_LIBRARIES}")

# Add include directories for MATLAB
include_directories(${Matlab_INCLUDE_DIRS})

# Final linking for the MATLAB MEX function
target_link_libraries(PointProcessing
    ${PCL_LIBRARIES}
    ${Matlab_LIBRARIES}
    ${TIFF_LIBRARY}
    ${TIFFXX_LIBRARY}
    ${OpenMP_omp_LIBRARY}
)

# Set properties for the MEX file
set_target_properties(PointProcessing PROPERTIES
    OUTPUT_NAME "PointProcessing"
    PREFIX ""
    SUFFIX ".mexmaci64"
    INSTALL_RPATH "@loader_path"
)

# Output useful information
message(STATUS "PCL_INCLUDE_DIRS: ${PCL_INCLUDE_DIRS}")
message(STATUS "PCL_LIBRARY_DIRS: ${PCL_LIBRARY_DIRS}")
message(STATUS "MATLAB_LIBRARIES: ${Matlab_LIBRARIES}")
